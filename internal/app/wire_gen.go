// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package app

import (
	"go-multitenant/internal/db"
	"go-multitenant/internal/handler"
	"go-multitenant/internal/repo"
	"go-multitenant/internal/service"
)

// Injectors from wire.go:

func InitializeApp() (*App, error) {
	gormDB, err := db.NewMasterDB()
	if err != nil {
		return nil, err
	}
	dbProvider := db.NewDBProvider(gormDB)
	userRepo := repo.NewUserRepo()
	userService := service.NewUserService(dbProvider, userRepo)
	restHandler := handler.NewRestHandler(userService)
	grpcServer := handler.NewGRPCServer(userService)
	app := NewApp(restHandler, grpcServer)
	return app, nil
}

// wire.go:

type App struct {
	RestHandler *handler.RestHandler
	GRPCServer  *handler.GRPCServer
}

func NewApp(rest *handler.RestHandler, grpc *handler.GRPCServer) *App {
	return &App{RestHandler: rest, GRPCServer: grpc}
}
